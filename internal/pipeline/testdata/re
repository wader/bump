/^a.*$/ -> re:/^a.*$/
    ->
    a:1,b:2,c:3 -> a:1 a
    aa:1,b:2,ab:3 -> aa:1,ab:3 aa

# just filter
re:/a/ -> re:/a/
    a:1,b:2,c:3 -> a:1 a

# simple replace
re:/a// -> re:/a//
    bab:1 -> bb:1 bb

re:/a/b/ -> re:/a/b/
    a:1,b:2,c:3 -> b:1 b
re:/a/b/ -> re:/a/b/
    bab:1 -> bbb:1 bbb

# submatch replace
/a(.)/ -> re:/a(.)/
    ab:1 -> b:1 b

# multiple submatch replace
/(.)(.)/${0}$2$1/ -> re:/(.)(.)/${0}$2$1/
    ab:1 -> abba:1 abba

# named submatch name/value
/(?P<name>.)(?P<value>.)/ -> re:/(?P<name>.)(?P<value>.)/
    ab,cd -> a:name=a:value=b,c:name=c:value=d a

# non-matching submatch
/(?P<name>b)(?P<a>a)?./ -> re:/(?P<name>b)(?P<a>a)?./
    bb -> b:name=b b

re:/(/ -> error:error parsing regexp: missing closing ): `(`
re:/(// -> error:error parsing regexp: missing closing ): `(`

static:aaa 1.1.1\naaa 3.1.2\naaa 1.1.1\n|re:/(?m:^.* (.*)$)/|semver:3.1.2 -> static:aaa 1.1.1\naaa 3.1.2\naaa 1.1.1\n|re:/(?m:^.* (.*)$)/|semver:3.1.2
    -> 3.1.2,1.1.1,1.1.1 3.1.2

# alternative delimiter
re:#a# -> re:#a#
    a:1,b:2,c:3 -> a:1 a

re:#a#b# -> re:#a#b#
    bab:1 -> bbb:1 bbb

# does not support short syntax
%a% -> error:no filter matches

# transform with named submatch should change current key
@commit|/^(.{12})/ -> key:commit|re:/^(.{12})/
    a:commit=6e8e738ad208923de99951fe0b48239bfd864f28 -> a:commit=6e8e738ad208 6e8e738ad208


@commit|/1/a/|@name -> key:commit|re:/1/a/|key:name
    abc:commit=1234 -> abc:commit=a234 abc

@commit|/^(..).*/ -> key:commit|re:/^(..).*/
    abc:commit=1234 -> abc:commit=12 12

@commit|/^(?P<abc>..).*/ -> key:commit|re:/^(?P<abc>..).*/
    abc:commit=1234 -> abc:abc=12:commit=1234 1234
